@page "/LogViewer"

@using KubeLife.Domain.Models;
@using Microsoft.AspNetCore.WebUtilities
@using KubeLife.BlazorApp.Extensions
@inject NavigationManager NavManager

@using KubeLife.Domain;
@using KubeLife.Core.Extensions;
@using KubeLife.Kubernetes.Models;

@inject IKubernetesDomain domainService;


@if (!LogResults.IsAny())
{
    <p><em>Loading...</em></p>
}
else
{
    @if (!string.IsNullOrWhiteSpace(QueryResult))
    {
        <p>
            <em>@((MarkupString)QueryResult)</em>
        </p>
    }
    <p style="background-color:black; color:white;">
        <em>@((MarkupString)QueryResult)</em>        
    </p>
}

@code {
    public string PodNamesRaw { get; set; }
    public string KubeNamespace { get; set; }

    public string QueryResult { get; set; }
    public List<KubeLogModel> LogResults { get; set; }

    protected override async Task OnInitializedAsync()
    {
        KubeNamespace = NavManager.QueryStringSingle("Namespace");
        PodNamesRaw = NavManager.QueryStringSingle("PodNames");
        var podNames = PodNamesRaw.Split(",").ToList();
        if (string.IsNullOrWhiteSpace(PodNamesRaw) || !podNames.IsAny())
            QueryResult = "There is no 'Job Detail' provided.";

        LogResults = await domainService.GetLogOfAllPods(KubeNamespace, podNames);
    }
}

